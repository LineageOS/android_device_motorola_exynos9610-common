type charge_only, domain;
type charge_only_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(charge_only)

allow charge_only chargeonly_data_file:dir rw_dir_perms;
allow charge_only chargeonly_data_file:file create_file_perms;

allow charge_only {
    graphics_device
    input_device
}:dir r_dir_perms;

allow charge_only {
    graphics_device
    input_device
    kmsg_device
}:chr_file rw_file_perms;

r_dir_file(charge_only, sysfs_battery)
r_dir_file(charge_only, sysfs_battery_writable)
r_dir_file(charge_only, sysfs_leds)

allow charge_only {
    sysfs_backlight_writable
    sysfs_power
}:file rw_file_perms;

allow charge_only self:netlink_kobject_uevent_socket create_socket_perms_no_ioctl;

unix_socket_connect(charge_only, property, init)

binder_call(charge_only, hwservicemanager)

get_prop(charge_only, hwservicemanager_prop)
set_prop(charge_only, powerctl_prop)

dontaudit charge_only self:capability { dac_override net_admin };
